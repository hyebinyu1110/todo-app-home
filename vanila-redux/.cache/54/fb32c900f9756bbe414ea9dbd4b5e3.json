{"id":"node_modules/core-js/modules/es6.regexp.split.js","dependencies":[{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\package.json","includedInParent":true,"mtime":1654240863877},{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1654240835037},{"name":"./$.fix-re-wks","loc":{"line":2,"column":8,"index":25},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\es6.regexp.split.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.fix-re-wks.js"}],"generated":{"js":"// @@split logic\nrequire('./$.fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return function split(separator, limit){\n    'use strict';\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined\n      ? fn.call(separator, O, limit)\n      : $split.call(String(O), separator, limit);\n  };\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es6.regexp.split.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"node_modules/core-js/modules/es6.regexp.split.js":"// @@split logic\nrequire('./$.fix-re-wks')('split', 2, function(defined, SPLIT, $split){\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return function split(separator, limit){\n    'use strict';\n    var O  = defined(this)\n      , fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined\n      ? fn.call(separator, O, limit)\n      : $split.call(String(O), separator, limit);\n  };\n});"},"lineCount":12}},"error":null,"hash":"be77701e4721e064874a19177fd9b22a","cacheData":{"env":{}}}