{"id":"node_modules/core-js/modules/es6.string.ends-with.js","dependencies":[{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\package.json","includedInParent":true,"mtime":1654240863877},{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1654240835037},{"name":"./$.export","loc":{"line":3,"column":24,"index":106},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\es6.string.ends-with.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.export.js"},{"name":"./$.to-length","loc":{"line":4,"column":24,"index":144},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\es6.string.ends-with.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.to-length.js"},{"name":"./$.string-context","loc":{"line":5,"column":24,"index":185},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\es6.string.ends-with.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.string-context.js"},{"name":"./$.fails-is-regexp","loc":{"line":9,"column":40,"index":306},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\es6.string.ends-with.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.fails-is-regexp.js"}],"generated":{"js":"// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export   = require('./$.export')\n  , toLength  = require('./$.to-length')\n  , context   = require('./$.string-context')\n  , ENDS_WITH = 'endsWith'\n  , $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./$.fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /*, endPosition = @length */){\n    var that = context(this, searchString, ENDS_WITH)\n      , $$   = arguments\n      , endPosition = $$.length > 1 ? $$[1] : undefined\n      , len    = toLength(that.length)\n      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n      , search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/core-js/modules/es6.string.ends-with.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/core-js/modules/es6.string.ends-with.js":"// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export   = require('./$.export')\n  , toLength  = require('./$.to-length')\n  , context   = require('./$.string-context')\n  , ENDS_WITH = 'endsWith'\n  , $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./$.fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /*, endPosition = @length */){\n    var that = context(this, searchString, ENDS_WITH)\n      , $$   = arguments\n      , endPosition = $$.length > 1 ? $$[1] : undefined\n      , len    = toLength(that.length)\n      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)\n      , search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});"},"lineCount":21}},"error":null,"hash":"79a6dae74136d236ad1967edcf53fd33","cacheData":{"env":{}}}