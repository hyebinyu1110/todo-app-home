{"id":"node_modules/core-js/modules/$.string-at.js","dependencies":[{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\package.json","includedInParent":true,"mtime":1654240863877},{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1654240835037},{"name":"./$.to-integer","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.string-at.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.to-integer.js"},{"name":"./$.defined","loc":{"line":2,"column":24,"index":66},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.string-at.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.defined.js"}],"generated":{"js":"var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/$.string-at.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/core-js/modules/$.string-at.js":"var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};"},"lineCount":17}},"error":null,"hash":"cc139110738bb97e1c8bc7e711eaf13d","cacheData":{"env":{}}}