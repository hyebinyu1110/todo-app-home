{"id":"node_modules/core-js/modules/$.for-of.js","dependencies":[{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\package.json","includedInParent":true,"mtime":1654240863877},{"name":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1654240835037},{"name":"./$.ctx","loc":{"line":1,"column":26,"index":26},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.ctx.js"},{"name":"./$.iter-call","loc":{"line":2,"column":26,"index":63},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.iter-call.js"},{"name":"./$.is-array-iter","loc":{"line":3,"column":26,"index":106},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.is-array-iter.js"},{"name":"./$.an-object","loc":{"line":4,"column":26,"index":153},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.an-object.js"},{"name":"./$.to-length","loc":{"line":5,"column":26,"index":196},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.to-length.js"},{"name":"./core.get-iterator-method","loc":{"line":6,"column":26,"index":239},"parent":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\$.for-of.js","resolved":"C:\\Users\\HBYU\\Documents\\todo-app-home\\vanila-redux\\node_modules\\core-js\\modules\\core.get-iterator-method.js"}],"generated":{"js":"var ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js/modules/$.for-of.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/core-js/modules/$.for-of.js":"var ctx         = require('./$.ctx')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , anObject    = require('./$.an-object')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};"},"lineCount":19}},"error":null,"hash":"edae0c9cff8366f8b312eff3ee1b3c2d","cacheData":{"env":{}}}